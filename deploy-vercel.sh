#!/bin/bash

# üöÄ Script de D√©ploiement Automatique FindYourPlug sur Vercel
# Usage: ./deploy-vercel.sh [message]

set -e  # Arr√™ter en cas d'erreur

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction d'affichage
print_status() {
    echo -e "${BLUE}üöÄ $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Message de commit par d√©faut
COMMIT_MESSAGE="${1:-üöÄ D√©ploiement automatique $(date '+%Y-%m-%d %H:%M:%S')}"

print_status "D√©ploiement FindYourPlug sur Vercel..."
echo ""

# 1. V√©rification des pr√©requis
print_status "V√©rification des pr√©requis..."

# V√©rifier si on est dans un repo git
if [ ! -d ".git" ]; then
    print_error "Ce n'est pas un repository Git !"
    exit 1
fi

# V√©rifier si Vercel CLI est install√© (optionnel)
if command -v vercel &> /dev/null; then
    VERCEL_CLI=true
    print_success "Vercel CLI d√©tect√©"
else
    VERCEL_CLI=false
    print_warning "Vercel CLI non d√©tect√© (d√©ploiement manuel n√©cessaire)"
fi

# 2. V√©rification de l'√©tat du repository
print_status "V√©rification de l'√©tat du repository..."
git status --porcelain

# 3. Tests de l'API bot
print_status "Test de connectivit√© avec l'API bot..."
if curl -s --max-time 10 "https://jhhhhhhggre.onrender.com/api/public/config" > /dev/null; then
    print_success "API bot accessible"
else
    print_warning "API bot non accessible (sera test√© apr√®s d√©ploiement)"
fi

# 4. V√©rification du build local (optionnel)
read -p "Voulez-vous tester le build local avant d√©ploiement ? (y/N): " test_build
if [[ $test_build =~ ^[Yy]$ ]]; then
    print_status "Test du build local..."
    cd admin-panel
    
    # Installer les d√©pendances si n√©cessaire
    if [ ! -d "node_modules" ]; then
        print_status "Installation des d√©pendances..."
        npm install
    fi
    
    # Tester le build
    print_status "Build de test..."
    npm run build
    
    if [ $? -eq 0 ]; then
        print_success "Build local r√©ussi"
    else
        print_error "√âchec du build local"
        exit 1
    fi
    
    cd ..
fi

# 5. Commit et push des changements
print_status "Sauvegarde des modifications..."

# Ajouter tous les fichiers
git add .

# V√©rifier s'il y a des changements √† commiter
if git diff --staged --quiet; then
    print_warning "Aucune modification √† commiter"
else
    # Commiter les changements
    git commit -m "$COMMIT_MESSAGE"
    print_success "Modifications commit√©es"
fi

# Push vers GitHub
print_status "Push vers GitHub..."
git push origin main

if [ $? -eq 0 ]; then
    print_success "Push r√©ussi vers GitHub"
else
    print_error "√âchec du push vers GitHub"
    exit 1
fi

# 6. D√©ploiement Vercel
if [ "$VERCEL_CLI" = true ]; then
    print_status "D√©ploiement avec Vercel CLI..."
    cd admin-panel
    
    # D√©ploiement en production
    vercel --prod --yes
    
    if [ $? -eq 0 ]; then
        print_success "D√©ploiement Vercel r√©ussi"
    else
        print_error "√âchec du d√©ploiement Vercel"
        exit 1
    fi
    
    cd ..
else
    print_status "D√©ploiement automatique via GitHub..."
    print_warning "Vercel d√©ploiera automatiquement depuis GitHub"
    print_warning "Surveillez les logs sur https://vercel.com/dashboard"
fi

# 7. Tests post-d√©ploiement
print_status "Informations de d√©ploiement..."
echo ""
echo "üìã URLs importantes :"
echo "   ‚Ä¢ Repository: https://github.com/juniorrrrr345/jhhhhhhggre"
echo "   ‚Ä¢ Dashboard Vercel: https://vercel.com/dashboard"
echo "   ‚Ä¢ API Bot: https://jhhhhhhggre.onrender.com"
echo ""
echo "üîó URLs √† tester apr√®s d√©ploiement :"
echo "   ‚Ä¢ Panel Admin: https://votre-app.vercel.app"
echo "   ‚Ä¢ Boutique: https://votre-app.vercel.app/shop"
echo "   ‚Ä¢ R√©seaux sociaux: https://votre-app.vercel.app/admin/social-media"
echo ""

# 8. V√©rifications recommand√©es
print_status "V√©rifications recommand√©es :"
echo "   1. ‚úÖ Tester la page de connexion"
echo "   2. ‚úÖ V√©rifier l'affichage des r√©seaux sociaux sur /shop"
echo "   3. ‚úÖ S'assurer que le mode local ne s'active pas en permanence"
echo "   4. ‚úÖ Tester la gestion des r√©seaux sociaux dans l'admin"
echo ""

print_success "D√©ploiement termin√© avec succ√®s !"
print_status "Votre application FindYourPlug est maintenant d√©ploy√©e sur Vercel"

# 9. Option pour ouvrir les URLs
read -p "Voulez-vous ouvrir le dashboard Vercel ? (y/N): " open_vercel
if [[ $open_vercel =~ ^[Yy]$ ]]; then
    if command -v xdg-open &> /dev/null; then
        xdg-open "https://vercel.com/dashboard"
    elif command -v open &> /dev/null; then
        open "https://vercel.com/dashboard"
    else
        print_warning "Impossible d'ouvrir automatiquement. Allez sur https://vercel.com/dashboard"
    fi
fi

echo ""
print_success "Script de d√©ploiement termin√© !"
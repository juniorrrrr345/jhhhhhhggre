const translations = {
  // Configuration des langues
  languages: {
    fr: { name: 'Fran√ßais', flag: 'üá´üá∑', code: 'fr' },
    en: { name: 'English', flag: 'üá¨üáß', code: 'en' },
    it: { name: 'Italiano', flag: 'üáÆüáπ', code: 'it' },
    es: { name: 'Espa√±ol', flag: 'üá™üá∏', code: 'es' },
    de: { name: 'Deutsch', flag: 'üá©üá™', code: 'de' }
  },

  // Traductions par d√©faut
  defaultTranslations: {
    // === MENU PRINCIPAL ===
    'menu.topPlugs': {
      fr: 'üîå Top Des Plugs',
      en: 'üîå Top Plugs',
      it: 'üîå Top Negozi',
      es: 'üîå Top Tiendas',
      de: 'üîå Top Shops'
    },
    'menu.contact': {
      fr: 'üìû Contact',
      en: 'üìû Contact',
      it: 'üìû Contatto',
      es: 'üìû Contacto',
      de: 'üìû Kontakt'
    },
    'menu.info': {
      fr: '‚ÑπÔ∏è Info',
      en: '‚ÑπÔ∏è Info',
      it: '‚ÑπÔ∏è Info',
      es: '‚ÑπÔ∏è Info',
      de: '‚ÑπÔ∏è Info'
    },
    'menu.becomeDealer': {
      fr: 'üíº Devenir Plug',
      en: 'üíº Become Dealer',
      it: 'üíº Diventa Rivenditore',
      es: 'üíº Ser Distribuidor',
      de: 'üíº H√§ndler werden'
    },
    'menu.language': {
      fr: 'üåç Langue',
      en: 'üåç Language',
      it: 'üåç Lingua',
      es: 'üåç Idioma',
      de: 'üåç Sprache'
    },
    'menu.translation': {
      fr: 'üåç Traduction',
      en: 'üåç Translation',
      it: 'üåç Traduzione',
      es: 'üåç Traducci√≥n',
      de: 'üåç √úbersetzung'
    },
    'menu.delivery': {
      fr: 'üöö Livraison',
      en: 'üöö Delivery',
      it: 'üöö Consegna',
      es: 'üöö Entrega',
      de: 'üöö Lieferung'
    },

    // === FILTRES TOP PLUGS ===
    'filters.delivery': {
      fr: 'üì¶ Livraison',
      en: 'üì¶ Delivery',
      it: 'üì¶ Consegna',
      es: 'üì¶ Entrega',
      de: 'üì¶ Lieferung'
    },
    'filters.meetup': {
      fr: 'ü§ù Meetup',
      en: 'ü§ù Meetup',
      it: 'ü§ù Incontro',
      es: 'ü§ù Encuentro',
      de: 'ü§ù Treffen'
    },
    'filters.postal': {
      fr: 'üì¨ Envoi Postal',
      en: 'üì¨ Postal Shipping',
      it: 'üì¨ Spedizione Postale',
      es: 'üì¨ Env√≠o Postal',
      de: 'üì¨ Postversand'
    },
    'filters.department': {
      fr: 'üìç D√©partement üîÅ',
      en: 'üìç State/Region üîÅ',
      it: 'üìç Regione üîÅ',
      es: 'üìç Provincia üîÅ',
      de: 'üìç Bundesland üîÅ'
    },
    'filters.reset': {
      fr: 'üîÅ R√©initialiser les filtres',
      en: 'üîÅ Reset Filters',
      it: 'üîÅ Reimposta Filtri',
      es: 'üîÅ Reiniciar Filtros',
      de: 'üîÅ Filter zur√ºcksetzen'
    },
    'filters.back': {
      fr: 'üîô Retour',
      en: 'üîô Back',
      it: 'üîô Indietro',
      es: 'üîô Volver',
      de: 'üîô Zur√ºck'
    },

    // === MESSAGES ===
    'messages.welcome': {
      fr: 'FINDYOURPLUG\nMINI-APP TELEGRAM\nCHILL',
      en: 'FINDYOURPLUG\nTELEGRAM MINI-APP\nCHILL',
      it: 'FINDYOURPLUG\nMINI-APP TELEGRAM\nCHILL',
      es: 'FINDYOURPLUG\nMINI-APP TELEGRAM\nCHILL',
      de: 'FINDYOURPLUG\nTELEGRAM MINI-APP\nCHILL'
    },
    'messages.contactUs': {
      fr: 'Contactez-nous pour plus d\'informations.',
      en: 'Contact us for more information.',
      it: 'Contattaci per maggiori informazioni.',
      es: 'Cont√°ctanos para m√°s informaci√≥n.',
      de: 'Kontaktieren Sie uns f√ºr weitere Informationen.'
    },
    'messages.contactSocial': {
      fr: 'üì± Nous contacter :',
      en: 'üì± Contact us:',
      it: 'üì± Contattaci:',
      es: 'üì± Cont√°ctanos:',
      de: 'üì± Kontaktiere uns:'
    },
    'messages.noPlugs': {
      fr: '‚ùå Aucun plug disponible pour le moment.',
      en: '‚ùå No plugs available at the moment.',
      it: '‚ùå Nessun negozio disponibile al momento.',
      es: '‚ùå No hay tiendas disponibles en este momento.',
      de: '‚ùå Momentan keine Shops verf√ºgbar.'
    },
    'messages.shopsAvailable': {
      fr: 'boutiques disponibles',
      en: 'shops available',
      it: 'negozi disponibili',
      es: 'tiendas disponibles',
      de: 'Shops verf√ºgbar'
    },

    // === INSCRIPTION ===
    'registration.title': {
      fr: 'üõ†Ô∏è FORMULAIRE D\'INSCRIPTION ‚Äì FindYourPlug',
      en: 'üõ†Ô∏è REGISTRATION FORM ‚Äì FindYourPlug',
      it: 'üõ†Ô∏è MODULO DI REGISTRAZIONE ‚Äì FindYourPlug',
      es: 'üõ†Ô∏è FORMULARIO DE REGISTRO ‚Äì FindYourPlug',
      de: 'üõ†Ô∏è ANMELDEFORMULAR ‚Äì FindYourPlug'
    },
    'registration.step1': {
      fr: 'üü¶ √âtape 1 : Nom de Plug',
      en: 'üü¶ Step 1: Plug Name',
      it: 'üü¶ Fase 1: Nome Negozio',
      es: 'üü¶ Paso 1: Nombre de Tienda',
      de: 'üü¶ Schritt 1: Shop-Name'
    },
    'registration.letsStart': {
      fr: 'üìù Commen√ßons ton inscription sur FindYourPlug !',
      en: 'üìù Let\'s start your registration on FindYourPlug!',
      it: 'üìù Iniziamo la tua registrazione su FindYourPlug!',
      es: 'üìù ¬°Comencemos tu registro en FindYourPlug!',
      de: 'üìù Beginnen wir deine Anmeldung bei FindYourPlug!'
    },
    'registration.cancel': {
      fr: '‚ùå Annuler',
      en: '‚ùå Cancel',
      it: '‚ùå Annulla',
      es: '‚ùå Cancelar',
      de: '‚ùå Abbrechen'
    },

    // === BOUTIQUE WEB ===
    'shop.title': {
      fr: 'FINDYOURPLUG',
      en: 'FINDYOURPLUG',
      it: 'FINDYOURPLUG',
      es: 'FINDYOURPLUG',
      de: 'FINDYOURPLUG'
    },
    'shop.loading': {
      fr: 'Chargement...',
      en: 'Loading...',
      it: 'Caricamento...',
      es: 'Cargando...',
      de: 'Laden...'
    },
    'shop.search': {
      fr: 'Rechercher',
      en: 'Search',
      it: 'Cerca',
      es: 'Buscar',
      de: 'Suchen'
    },
    'shop.home': {
      fr: 'Accueil',
      en: 'Home',
      it: 'Casa',
      es: 'Inicio',
      de: 'Startseite'
    },
    'shop.vip': {
      fr: 'VIP',
      en: 'VIP',
      it: 'VIP',
      es: 'VIP',
      de: 'VIP'
    },
    'shop.likes': {
      fr: 'votes',
      en: 'votes',
      it: 'voti',
      es: 'votos',
      de: 'Stimmen'
    }
  }
};

// Fonction pour obtenir la traduction
const getTranslation = (key, language = 'fr', customTranslations = null) => {
  // V√©rifier d'abord les traductions personnalis√©es
  if (customTranslations && customTranslations.has && customTranslations.has(key)) {
    const customTrans = customTranslations.get(key);
    if (customTrans && customTrans.get && customTrans.get(language)) {
      return customTrans.get(language);
    }
  }
  
  // Fallback vers les traductions par d√©faut
  const defaultTrans = translations.defaultTranslations[key];
  if (defaultTrans && defaultTrans[language]) {
    return defaultTrans[language];
  }
  
  // Fallback vers fran√ßais si langue pas trouv√©e
  if (defaultTrans && defaultTrans.fr) {
    return defaultTrans.fr;
  }
  
  // Fallback final : retourner la cl√©
  return key;
};

// Fonction pour cr√©er le clavier de s√©lection de langue
const createLanguageKeyboard = (currentLanguage = 'fr') => {
  const { Markup } = require('telegraf');
  const buttons = [];
  
  // Premi√®re ligne : drapeaux des langues
  const flagRow = [];
  Object.entries(translations.languages).forEach(([code, lang]) => {
    const isSelected = code === currentLanguage;
    const buttonText = isSelected ? `‚úÖ ${lang.flag}` : lang.flag;
    flagRow.push(Markup.button.callback(buttonText, `lang_${code}`));
  });
  
  // Grouper par 3 boutons par ligne
  for (let i = 0; i < flagRow.length; i += 3) {
    buttons.push(flagRow.slice(i, i + 3));
  }
  
  // Ligne de retour
  const backText = getTranslation('filters.back', currentLanguage);
  buttons.push([Markup.button.callback(backText, 'back_main')]);
  
  return Markup.inlineKeyboard(buttons);
};

// Fonction pour initialiser les traductions par d√©faut
const initializeDefaultTranslations = async (Config) => {
  try {
    const config = await Config.findById('main');
    if (!config) return;
    
    // Initialiser languages si pas d√©fini
    if (!config.languages) {
      config.languages = {
        enabled: false,
        currentLanguage: 'fr',
        availableLanguages: Object.entries(translations.languages).map(([code, lang]) => ({
          code,
          name: lang.name,
          flag: lang.flag,
          enabled: true
        })),
        translations: new Map()
      };
    }
    
    // Ajouter toutes les traductions par d√©faut
    Object.entries(translations.defaultTranslations).forEach(([key, langs]) => {
      if (!config.languages.translations.has(key)) {
        const langMap = new Map();
        Object.entries(langs).forEach(([langCode, text]) => {
          langMap.set(langCode, text);
        });
        config.languages.translations.set(key, langMap);
      }
    });
    
    await config.save();
    console.log('‚úÖ Traductions par d√©faut initialis√©es');
    
  } catch (error) {
    console.error('‚ùå Erreur initialisation traductions:', error);
  }
};

// Export
module.exports = {
  translations,
  getTranslation,
  createLanguageKeyboard,
  initializeDefaultTranslations
};
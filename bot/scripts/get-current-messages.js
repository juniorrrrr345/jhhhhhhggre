const mongoose = require('mongoose');
const Config = require('../src/models/Config');
require('dotenv').config({ path: '../.env' });

async function getCurrentMessages() {
  try {
    // Connexion √† MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/telegram-bot');
    console.log('‚úÖ Connect√© √† MongoDB');
    
    // R√©cup√©rer la configuration
    const config = await Config.findById('main');
    
    if (!config) {
      console.log('‚ùå Configuration non trouv√©e');
      return;
    }
    
    console.log('\nüìû MESSAGE CONTACT ACTUEL:');
    console.log('------------------------');
    console.log(config.buttons?.contact?.content || 'Non d√©fini');
    
    console.log('\n\n‚ÑπÔ∏è MESSAGE INFO ACTUEL:');
    console.log('--------------------');
    console.log(config.buttons?.info?.content || 'Non d√©fini');
    
    // Afficher aussi les traductions personnalis√©es si elles existent
    if (config.buttons?.contact?.contentTranslations?.size > 0) {
      console.log('\n\nüåê TRADUCTIONS CONTACT EXISTANTES:');
      console.log('----------------------------------');
      for (const [lang, text] of config.buttons.contact.contentTranslations) {
        console.log(`${lang}: ${text}`);
      }
    }
    
    if (config.buttons?.info?.contentTranslations?.size > 0) {
      console.log('\n\nüåê TRADUCTIONS INFO EXISTANTES:');
      console.log('-------------------------------');
      for (const [lang, text] of config.buttons.info.contentTranslations) {
        console.log(`${lang}: ${text}`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\n‚úÖ D√©connect√© de MongoDB');
  }
}

getCurrentMessages();
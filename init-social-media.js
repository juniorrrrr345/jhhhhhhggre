const mongoose = require('mongoose');

// Nouvelle URI MongoDB
const MONGODB_URI = 'mongodb+srv://teste:Junior@junior.jiy8uam.mongodb.net/?retryWrites=true&w=majority&appName=Junior';

// R√©seaux sociaux √† initialiser
const socialMediaList = [
  { 
    id: 'telegram',
    name: 'Telegram', 
    emoji: 'üì±', 
    url: 'https://t.me/+zcP68c4M_3NlM2Y0',
    enabled: true
  },
  { 
    id: 'instagram',
    name: 'Instagram', 
    emoji: 'üì∏', 
    url: 'https://www.instagram.com/find.yourplug',
    enabled: true
  },
  { 
    id: 'luffa',
    name: 'Luffa', 
    emoji: 'üõú', 
    url: 'https://callup.luffa.im/c/EnvtiTHkbvP',
    enabled: true
  },
  { 
    id: 'discord',
    name: 'Discord', 
    emoji: 'üéÆ', 
    url: 'https://discord.gg/g2dACUC3',
    enabled: true
  },
  { 
    id: 'potato',
    name: 'Potato', 
    emoji: 'ü•î', 
    url: 'https://dym168.org/findyourplug',
    enabled: true
  }
];

async function initSocialMedia() {
  try {
    console.log('üîÑ Connexion √† MongoDB...');
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ Connect√© √† MongoDB');
    
    // D√©finir le sch√©ma Config
    const ConfigSchema = new mongoose.Schema({
      _id: { type: String, default: 'main' },
      welcomeMessage: String,
      contactMessage: String,
      infoMessage: String,
      supportLink: String,
      image: String,
      socialMedia: mongoose.Schema.Types.Mixed,
      socialMediaList: [{
        id: String,
        name: String,
        emoji: String,
        url: String,
        enabled: Boolean
      }],
      languages: mongoose.Schema.Types.Mixed,
      shopConfig: mongoose.Schema.Types.Mixed
    }, { timestamps: true });
    
    const Config = mongoose.models.Config || mongoose.model('Config', ConfigSchema);
    
    // R√©cup√©rer la configuration existante
    let config = await Config.findById('main');
    
    if (!config) {
      console.log('‚ùå Aucune configuration trouv√©e. Cr√©ation...');
      config = await Config.create({
        _id: 'main',
        socialMediaList: socialMediaList
      });
    } else {
      console.log('‚úÖ Configuration existante trouv√©e');
      
      // Mettre √† jour les r√©seaux sociaux
      config.socialMediaList = socialMediaList;
      
      // Aussi mettre √† jour l'ancien format pour compatibilit√©
      config.socialMedia = {
        telegram: 'https://t.me/+zcP68c4M_3NlM2Y0',
        instagram: 'https://www.instagram.com/find.yourplug',
        whatsapp: ''
      };
      
      await config.save();
    }
    
    console.log('\n‚úÖ R√©seaux sociaux initialis√©s avec succ√®s !');
    console.log('\nüì± R√©seaux sociaux configur√©s :');
    socialMediaList.forEach(social => {
      console.log(`   ${social.emoji} ${social.name}: ${social.url}`);
    });
    
    console.log('\nüìã Prochaines √©tapes :');
    console.log('1. Les r√©seaux sociaux sont maintenant dans la base de donn√©es');
    console.log('2. Vous pouvez les modifier depuis : https://sfeplugslink.vercel.app/admin/social-media');
    console.log('3. Le bot affichera automatiquement ces r√©seaux sociaux');
    
    await mongoose.disconnect();
    
  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
    process.exit(1);
  }
}

// Lancer l'initialisation
initSocialMedia();
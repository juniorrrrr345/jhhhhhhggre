const mongoose = require('mongoose');
require('dotenv').config({ path: './bot/.env' });

// Script pour lister toutes les boutiques
async function listShops() {
  try {
    console.log('üîÑ Connexion √† MongoDB...');
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/findyourplug');
    console.log('‚úÖ Connect√© √† MongoDB\n');
    
    const Plug = require('./bot/src/models/Plug');
    
    // R√©cup√©rer toutes les boutiques
    const shops = await Plug.find({}).sort({ createdAt: -1 });
    
    console.log('==============================================');
    console.log(`üìã LISTE DES BOUTIQUES (Total: ${shops.length})`);
    console.log('==============================================\n');
    
    if (shops.length === 0) {
      console.log('‚ùå Aucune boutique trouv√©e dans la base de donn√©es.');
      process.exit(0);
    }
    
    // Afficher chaque boutique
    shops.forEach((shop, index) => {
      console.log(`${index + 1}. ${shop.isVip ? '‚≠ê' : 'üì¶'} ${shop.name}`);
      console.log(`   üÜî ID: ${shop._id}`);
      console.log(`   üåç Pays: ${shop.countries.join(', ') || 'Non d√©fini'}`);
      console.log(`   üí¨ Telegram: ${shop.contact?.telegram || 'Non d√©fini'}`);
      
      // Services actifs
      const activeServices = [];
      if (shop.services?.delivery?.enabled) {
        const deps = shop.services.delivery.departments?.length || 0;
        activeServices.push(`üì¶ Livraison (${deps} d√©p.)`);
      }
      if (shop.services?.meetup?.enabled) {
        const deps = shop.services.meetup.departments?.length || 0;
        activeServices.push(`ü§ù Rencontre (${deps} d√©p.)`);
      }
      if (shop.services?.postal?.enabled) {
        const countries = shop.services.postal.countries?.length || 0;
        activeServices.push(`üì¨ Postal (${countries} pays)`);
      }
      
      if (activeServices.length > 0) {
        console.log(`   üìç Services: ${activeServices.join(', ')}`);
      }
      
      console.log(`   ‚ù§Ô∏è  Likes: ${shop.likes || 0}`);
      console.log(`   üìÖ Cr√©√©e le: ${shop.createdAt ? new Date(shop.createdAt).toLocaleDateString('fr-FR') : 'Date inconnue'}`);
      
      if (shop.referralCode) {
        console.log(`   üîó Code parrainage: ${shop.referralCode}`);
      }
      
      console.log('');
    });
    
    // Statistiques
    console.log('==============================================');
    console.log('üìä STATISTIQUES');
    console.log('==============================================');
    
    const vipCount = shops.filter(s => s.isVip).length;
    const withDelivery = shops.filter(s => s.services?.delivery?.enabled).length;
    const withMeetup = shops.filter(s => s.services?.meetup?.enabled).length;
    const withPostal = shops.filter(s => s.services?.postal?.enabled).length;
    
    console.log(`‚≠ê Boutiques VIP: ${vipCount}`);
    console.log(`üì¶ Avec livraison: ${withDelivery}`);
    console.log(`ü§ù Avec rencontre: ${withMeetup}`);
    console.log(`üì¨ Avec postal: ${withPostal}`);
    
    // Pays les plus repr√©sent√©s
    const countryCounts = {};
    shops.forEach(shop => {
      (shop.countries || []).forEach(country => {
        countryCounts[country] = (countryCounts[country] || 0) + 1;
      });
    });
    
    const topCountries = Object.entries(countryCounts)
      .sort((a, b) => b[1] - a[1])
      .slice(0, 5);
    
    if (topCountries.length > 0) {
      console.log('\nüåç Top 5 des pays:');
      topCountries.forEach(([country, count]) => {
        console.log(`   - ${country}: ${count} boutique(s)`);
      });
    }
    
    process.exit(0);
  } catch (error) {
    console.error('\n‚ùå Erreur:', error.message);
    process.exit(1);
  }
}

// Ex√©cuter directement
listShops();